# This is a basic workflow to help you get started with Actions

name: Download and Upload Artifact

on:
  workflow_dispatch:

jobs:
  download-upload-artifact:
    runs-on: ubuntu-latest
    env:
      ARTIFACT_NAME: my-artifact
      REPOSITORY_OWNER: HipoTech
      REPOSITORY_NAME: test_repo1
      AUTHORIZATION_HEADER: token ${{ secrets.MY_TEST_PAT }}
      ACCEPT_HEADER: application/vnd.github.v3+json
        
    steps:
    - name: Get latest artifact URL with specified name
      id: get-artifact
      run: |
        echo "Fetching latest artifact URL with specified name"
        LATEST_ARTIFACT_URL=$(curl -s  \
          -H "Authorization: $AUTHORIZATION_HEADER" \
          -H "Accept: $ACCEPT_HEADER" \
          "https://api.github.com/repos/$REPOSITORY_OWNER/$REPOSITORY_NAME/actions/artifacts" \
          | jq -r --arg ARTIFACT_NAME "$ARTIFACT_NAME" '.artifacts 
          | map(select(.name == $ARTIFACT_NAME)) 
          | sort_by(.created_at) 
          | last 
          | .archive_download_url')
        if [ -z "$LATEST_ARTIFACT_URL" ]; then
          echo "No artifact found with the name: $ARTIFACT_NAME"
          exit 1
        fi
          echo "url=$LATEST_ARTIFACT_URL" >> $GITHUB_OUTPUT
          echo "artefact_name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT

    - name: Download latest artifact with specified name
      run: |
        echo "Downloading latest artifact with specified name from source repository"
        curl -L -H "Authorization: token ${{ secrets.MY_TEST_PAT }}" \
          -o $ARTIFACT_NAME.zip ${{ steps.get-artifact.outputs.url }}

    - name: Extract artifact
      run: |
        echo "Extracting artifact"
        unzip $ARTIFACT_NAME.zip -d extracted_artifact
        
    - name: Show me my dir
      run: |
        ls -R
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ $ARTIFACT_NAME }}
        path: extracted_artifact
